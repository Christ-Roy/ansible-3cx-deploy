---
# Pre-flight checks before deployment

- name: Check if ISO file exists
  ansible.builtin.stat:
    path: "{{ iso_path }}"
  register: iso_file
  failed_when: not iso_file.stat.exists

- name: Check if SetupConfig.xml exists
  ansible.builtin.stat:
    path: "{{ setupconfig_source }}"
  register: setupconfig_file
  failed_when: not setupconfig_file.stat.exists

- name: Ensure required packages are installed
  ansible.builtin.package:
    name:
      - libvirt-daemon
      - libvirt-clients
      - python3-libvirt
      - qemu-kvm
      - virtinst
      - genisoimage
      - sshpass
    state: present
  become: true

- name: Check if libvirt is running
  ansible.builtin.systemd:
    name: libvirtd
    state: started
    enabled: true
  become: true

- name: Get list of existing VMs
  ansible.builtin.command:
    cmd: virsh list --all --name
  register: existing_vms
  become: true
  changed_when: false

- name: Destroy existing VM if it exists
  ansible.builtin.command:
    cmd: virsh destroy {{ vm_name }}
  become: true
  when: vm_name in existing_vms.stdout_lines
  ignore_errors: true
  changed_when: false

- name: Undefine existing VM if it exists
  ansible.builtin.command:
    cmd: virsh undefine {{ vm_name }}
  become: true
  when: vm_name in existing_vms.stdout_lines
  ignore_errors: true
  changed_when: false

- name: Remove existing VM disk if it exists
  ansible.builtin.file:
    path: "{{ storage_path }}/{{ vm_name }}.qcow2"
    state: absent
  become: true
